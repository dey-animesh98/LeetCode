/**
 * You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
Example 2:

Input: s = "", t = "y"
Output: "y"
 

Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.
 */
//--
{
    const findTheDifference = function (s, t) {
        let map = {}
        for (let chars in s) {
            map[s[chars]] = map[s[chars]] ? map[s[chars]] += 1 : 1
        }
        for (let chars in t) {
            map[t[chars]] = map[t[chars]] ? map[t[chars]] -= 1 : 1

        }
        return Object.keys(map).find(key => map[key] === 1); // for(const key in map) { if(map[key] === 1) return key}
    };
}

{
    const findTheDifference = function (s, t) {
        let mpp = new Map();
        for (let char of t) mpp.set(char, mpp.get(char) + 1 || 1);
        for (let char of s) mpp.set(char, mpp.get(char) - 1);
        for (let it of mpp) if (it[1] === 1) return it[0];
        return "-1";
    };
}
{
    const findTheDifference = function (s, t) {
        let ans = 0;
        for (let i = 0; i < s.length; i++) {
            ans += s[i].charCodeAt();
        }
        for (let j = 0; j < t.length; j++) {
            ans -= t[j].charCodeAt();
        }
        return String.fromCharCode(ans);
    };
}
    //   XOR's codes are ALMOST SAME!! Just slightly change operation symbols:

{
    const findTheDifference = function (s, t) {
        let ans = 0;
        for (let i = 0; i < s.length; i++) {
            ans ^= s[i].charCodeAt();
        }
        for (let j = 0; j < t.length; j++) {
            ans ^= t[j].charCodeAt();
        }
        return String.fromCharCode(ans);
    };
}